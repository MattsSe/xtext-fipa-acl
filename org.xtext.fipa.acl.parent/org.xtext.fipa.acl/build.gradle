dependencies {
    testCompile "junit:junit:4.12"
    testCompile "org.eclipse.xtext:org.eclipse.xtext.testing:${xtextVersion}"
    testCompile "org.eclipse.xtext:org.eclipse.xtext.xbase.testing:${xtextVersion}"
    compile project(':org.xtext.fipa.acl.model')
    compile "org.eclipse.xtext:org.eclipse.xtext:${xtextVersion}"
    compile "org.eclipse.xtext:org.eclipse.xtext.xbase:${xtextVersion}"
    compile "org.eclipse.xtext:org.eclipse.xtext.generator:$versions.xtext"
    compile "org.eclipse.emf:org.eclipse.emf.codegen:2.11.0"
    compile "org.eclipse.emf:org.eclipse.emf.codegen.ecore:2.12.0"
}
configurations {
    mwe2 {
        extendsFrom compile
    }
}

dependencies {
    mwe2 "org.eclipse.emf:org.eclipse.emf.mwe2.launch:2.9.1+"
    mwe2 "org.eclipse.xtext:org.eclipse.xtext.common.types:${xtextVersion}"
    mwe2 "org.eclipse.xtext:org.eclipse.xtext.xtext.generator:${xtextVersion}"
    mwe2 "org.eclipse.xtext:xtext-antlr-generator:[2.1.1, 3)"

    // added for Xcore support
    mwe2 'org.eclipse.emf:org.eclipse.emf.ecore.xcore:+'
    mwe2 'org.eclipse.emf:org.eclipse.emf.codegen.ecore.xtext:+'
}

task generateXtextLanguage(type: JavaExec) {
    main = 'org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher'
    classpath = configurations.mwe2
    inputs.file "src/main/java/org/xtext/fipa/acl/GenerateAcl.mwe2"
    inputs.file "src/main/java/org/xtext/fipa/acl/Acl.xtext"
    outputs.dir "src/main/xtext-gen"
    args += "src/main/java/org/xtext/fipa/acl/GenerateAcl.mwe2"
    args += "-p"
    args += "rootPath=/${projectDir}/.."
}

generateXtext.dependsOn(generateXtextLanguage)
clean.dependsOn(cleanGenerateXtextLanguage)
eclipse.classpath.plusConfigurations += [configurations.mwe2]
